{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React from 'react';\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    auth.signIn(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Logged in with: ', user.email);\n      navigation.navigate(\"main\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Log in\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: styles.input,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('resetPassword', {\n            name: 'resetPassword'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Login.js"],"names":["useNavigation","React","useState","Login","email","setEmail","password","setPassword","navigation","handleLogin","auth","signIn","then","userCredentials","user","console","info","navigate","catch","error","message","styles","container","text","input","forgotPassword","name","forgot"],"mappings":";AAAA,SAAQA,aAAR,QAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;;;;;;;;;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAI;AACd,kBAAyBD,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAaC,QAAb;;AACA,mBAA+BH,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAgBC,WAAhB;;AAEA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AAEA,MAAMS,WAAW,GAAG,SAAdA,WAAc,GAAK;AACrBC,IAAAA,IAAI,CAACC,MAAL,CAAYP,KAAZ,EAAkBE,QAAlB,EAA4BM,IAA5B,CAAiC,UAAAC,eAAe,EAAG;AAC/C,UAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAgCF,IAAI,CAACV,KAArC;AACAI,MAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AACH,KAJD,EAKCC,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIJ,OAAO,CAACI,KAAR,CAAcA,KAAK,CAACC,OAApB,CAAJ;AAAA,KALZ;AAMH,GAPD;;AASA,SACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAEI,KAAC,SAAD;AACA,MAAA,WAAW,EAAC,OADZ;AAEA,MAAA,KAAK,EAAElB,KAFP;AAGA,MAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,eAAIlB,QAAQ,CAACkB,IAAD,CAAZ;AAAA,OAHlB;AAIA,MAAA,KAAK,EAAEF,MAAM,CAACG;AAJd,MAFJ,EAQI,KAAC,SAAD;AACA,MAAA,WAAW,EAAC,UADZ;AAEA,MAAA,KAAK,EAAElB,QAFP;AAGA,MAAA,YAAY,EAAE,sBAAAiB,IAAI;AAAA,eAAIhB,WAAW,CAACgB,IAAD,CAAf;AAAA,OAHlB;AAIA,MAAA,KAAK,EAAEF,MAAM,CAACG,KAJd;AAKA,MAAA,eAAe;AALf,MARJ,EAeI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA,gBACI,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAKjB,UAAU,CAACS,QAAX,CAAoB,eAApB,EAAoC;AAACS,YAAAA,IAAI,EAAC;AAAN,WAApC,CAAL;AAAA,SAA3B;AAAA,kBACA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAAA;AAAA;AADA;AADJ,MAfJ;AAAA,IADJ;AAuBH,CAtCD;;AAwCA,eAAexB,KAAf","sourcesContent":["import {useNavigation } from '@react-navigation/core'\r\nimport React from 'react'\r\nimport  {useState} from 'react'\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\n// import { auth } from '../../firebase-config'\r\n\r\nconst Login = ()=>{\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const handleLogin = () =>{\r\n        auth.signIn(email,password).then(userCredentials =>{\r\n            const user = userCredentials.user;\r\n            console.info('Logged in with: ',user.email);\r\n            navigation.navigate(\"main\");\r\n        })\r\n        .catch(error => console.error(error.message))\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style={styles.container}>\r\n            <Text>Log in</Text>\r\n            <TextInput\r\n            placeholder='Email'\r\n            value={email}\r\n            onChangeText={text => setEmail(text)}\r\n            style={styles.input}\r\n            />\r\n            <TextInput\r\n            placeholder='Password'\r\n            value={password}\r\n            onChangeText={text => setPassword(text)}\r\n            style={styles.input}\r\n            secureTextEntry\r\n            />\r\n            <View style={styles.forgotPassword}>\r\n                <TouchableOpacity onPress={()=> navigation.navigate('resetPassword',{name:'resetPassword'})}>\r\n                <Text style={styles.forgot}>Forgot your password?</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}