{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState } from 'react';\nimport { theme } from \"../config/colors\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../../firebase-config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Logged in with:', user.email);\n      navigation.navigate(\"Main\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: styles.input,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPassword', {\n            name: 'ResetPassword'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogin,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register', {\n            name: 'Register'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 20,\n    justifyContent: \"center\"\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: theme.colors.primary,\n    padding: 10\n  },\n  buttonText: {\n    color: theme.colors.lightText,\n    fontWeight: '700',\n    fontSize: 16\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Login.js"],"names":["useNavigation","React","useState","theme","auth","Login","email","setEmail","password","setPassword","navigation","handleLogin","signInWithEmailAndPassword","then","userCredentials","user","console","info","navigate","catch","error","message","styles","container","text","input","forgotPassword","name","forgot","button","buttonText","row","link","StyleSheet","create","flex","paddingTop","height","margin","borderWidth","padding","width","alignItems","marginBottom","flexDirection","marginTop","justifyContent","fontSize","color","colors","secondary","fontWeight","primary","backgroundColor","lightText"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useState } from 'react'\r\nimport { theme } from '../config/colors'\r\n// import Logo from '../components/Logo'\r\n// Importing components from react-native library.\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth } from '../../firebase-config'\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.info('Logged in with:', user.email);\r\n        navigation.navigate(\"Main\");\r\n      })\r\n      .catch(error => console.error(error.message))\r\n  }\r\n\r\n  return (\r\n    // Using react-natives built in components.\r\n    <SafeAreaView style={styles.container}>\r\n        {/* <Logo/> */}\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={text => setPassword(text)}\r\n          style={styles.input}\r\n          secureTextEntry\r\n        />\r\n        <View style={styles.forgotPassword}>\r\n          <TouchableOpacity onPress={() => navigation.navigate('ResetPassword', { name: 'ResetPassword' }) }>\r\n            <Text style={styles.forgot}>Forgot your password?</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={handleLogin}\r\n          style={styles.button}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.row}>\r\n          <Text>Donâ€™t have an account? </Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Register', { name: 'Register' })}>\r\n            <Text style={styles.link}>Sign up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: \"20%\"\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 20,\r\n    justifyContent: \"center\"\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.primary,\r\n    padding: 10\r\n  },\r\n  buttonText: {\r\n    color: theme.colors.lightText,\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}