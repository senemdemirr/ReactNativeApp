{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState } from 'react';\nimport { theme } from \"../config/colors\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../../firebase-config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Registered with:', user.email);\n      navigation.navigate(\"Login\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.dis,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSignUp,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign Up\"\n        })\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Text, {\n          children: \"Already have an account? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Login', {\n              name: 'Login'\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.link,\n            children: \"Login\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  dis: {\n    backgroundColor: \"#060614\",\n    alignItems: 'center',\n    flex: 1,\n    width: '100%'\n  },\n  container: {\n    flex: 1,\n    marginTop: \"20%\",\n    width: '100%'\n  },\n  input: {\n    height: 50,\n    marginTop: 32,\n    borderBottomWidth: 1.5,\n    padding: 10,\n    borderBottomColor: theme.colors.colorGrey,\n    color: 'white',\n    width: '90%',\n    marginLeft: 20\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: theme.colors.colorPink,\n    padding: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    color: theme.colors.lightText,\n    fontWeight: '700',\n    fontSize: 16\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    justifyContent: \"center\"\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Register.js"],"names":["useNavigation","React","useState","theme","auth","Register","email","setEmail","password","setPassword","navigation","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","user","console","info","navigate","catch","error","message","styles","dis","container","text","input","button","buttonText","row","name","link","StyleSheet","create","backgroundColor","alignItems","flex","width","marginTop","height","borderBottomWidth","padding","borderBottomColor","colors","colorGrey","color","marginLeft","colorPink","lightText","fontWeight","fontSize","flexDirection","justifyContent","primary"],"mappings":";AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT;;;;;;;AAEA,SAASC,IAAT;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGV,aAAa,EAAhC;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBP,IAAAA,IAAI,CACDQ,8BADH,CACkCN,KADlC,EACyCE,QADzC,EAEGK,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiCF,IAAI,CAACT,KAAtC;AACAI,MAAAA,UAAU,CAACQ,QAAX,CAAoB,OAApB;AACD,KANH,EAOGC,KAPH,CAOS,UAAAC,KAAK;AAAA,aAAIJ,OAAO,CAACI,KAAR,CAAcA,KAAK,CAACC,OAApB,CAAJ;AAAA,KAPd;AAQD,GATD;;AAWA,SACE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,GAA5B;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA,iBACI,KAAC,SAAD;AACM,QAAA,WAAW,EAAC,OADlB;AAEM,QAAA,KAAK,EAAElB,KAFb;AAGM,QAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,iBAAIlB,QAAQ,CAACkB,IAAD,CAAZ;AAAA,SAHxB;AAIM,QAAA,KAAK,EAAEH,MAAM,CAACI;AAJpB,QADJ,EAOI,KAAC,SAAD;AACM,QAAA,WAAW,EAAC,UADlB;AAEM,QAAA,KAAK,EAAElB,QAFb;AAGM,QAAA,YAAY,EAAE,sBAAAiB,IAAI;AAAA,iBAAIhB,WAAW,CAACgB,IAAD,CAAf;AAAA,SAHxB;AAIM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAJpB;AAKM,QAAA,eAAe;AALrB,QAPJ,EAcI,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,MAAM,CAACK,MAAhC;AAAwC,QAAA,OAAO,EAAEhB,YAAjD;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEW,MAAM,CAACM,UAApB;AAAA;AAAA;AADJ,QAdJ,EAiBI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,GAApB;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMnB,UAAU,CAACQ,QAAX,CAAoB,OAApB,EAA6B;AAAEY,cAAAA,IAAI,EAAE;AAAR,aAA7B,CAAN;AAAA,WAA3B;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAER,MAAM,CAACS,IAApB;AAAA;AAAA;AADF,UAFJ;AAAA,QAjBJ;AAAA;AADJ,IADF;AA4BD,CA7CD;;AA+CA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,GAAG,EAAC;AACFW,IAAAA,eAAe,EAAC,SADd;AAEFC,IAAAA,UAAU,EAAC,QAFT;AAGFC,IAAAA,IAAI,EAAC,CAHH;AAIFC,IAAAA,KAAK,EAAC;AAJJ,GAD2B;AAO/Bb,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETE,IAAAA,SAAS,EAAE,KAFF;AAGTD,IAAAA,KAAK,EAAC;AAHG,GAPoB;AAY/BX,EAAAA,KAAK,EAAE;AACLa,IAAAA,MAAM,EAAE,EADH;AAELD,IAAAA,SAAS,EAAE,EAFN;AAGLE,IAAAA,iBAAiB,EAAE,GAHd;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,iBAAiB,EAACvC,KAAK,CAACwC,MAAN,CAAaC,SAL1B;AAMLC,IAAAA,KAAK,EAAC,OAND;AAOLR,IAAAA,KAAK,EAAC,KAPD;AAQLS,IAAAA,UAAU,EAAC;AARN,GAZwB;AAsB/BnB,EAAAA,MAAM,EAAE;AACNQ,IAAAA,UAAU,EAAE,QADN;AAEND,IAAAA,eAAe,EAAE/B,KAAK,CAACwC,MAAN,CAAaI,SAFxB;AAGNN,IAAAA,OAAO,EAAE,EAHH;AAINH,IAAAA,SAAS,EAAE;AAJL,GAtBuB;AA4B/BV,EAAAA,UAAU,EAAE;AACViB,IAAAA,KAAK,EAAE1C,KAAK,CAACwC,MAAN,CAAaK,SADV;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,QAAQ,EAAE;AAHA,GA5BmB;AAiC/BrB,EAAAA,GAAG,EAAE;AACHsB,IAAAA,aAAa,EAAE,KADZ;AAEHb,IAAAA,SAAS,EAAE,EAFR;AAGHc,IAAAA,cAAc,EAAE;AAHb,GAjC0B;AAsC/BrB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,UAAU,EAAE,MADR;AAEJJ,IAAAA,KAAK,EAAE1C,KAAK,CAACwC,MAAN,CAAaU;AAFhB;AAtCyB,CAAlB,CAAf;AA4CA,eAAehD,QAAf","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useState } from 'react'\r\nimport { theme } from '../config/colors'\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth } from '../../firebase-config'\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const handleSignUp = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.info('Registered with:', user.email);\r\n        navigation.navigate(\"Login\");\r\n      })\r\n      .catch(error => console.error(error.message))\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.dis}>\r\n        <View style={styles.container}>\r\n            <TextInput\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChangeText={text => setEmail(text)}\r\n                  style={styles.input}\r\n            />\r\n            <TextInput\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChangeText={text => setPassword(text)}\r\n                  style={styles.input}\r\n                  secureTextEntry\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.row}>\r\n                <Text>Already have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.navigate('Login', { name: 'Login' })}>\r\n                  <Text style={styles.link}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  dis:{\r\n    backgroundColor:\"#060614\",\r\n    alignItems:'center',\r\n    flex:1,\r\n    width:'100%'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    marginTop: \"20%\",\r\n    width:'100%'\r\n  },\r\n  input: {\r\n    height: 50,\r\n    marginTop: 32,\r\n    borderBottomWidth: 1.5,\r\n    padding: 10,\r\n    borderBottomColor:theme.colors.colorGrey,\r\n    color:'white',\r\n    width:'90%',\r\n    marginLeft:20\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.colorPink,\r\n    padding: 10,\r\n    marginTop: 10\r\n  },\r\n  buttonText: {\r\n    color: theme.colors.lightText,\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    justifyContent: \"center\"\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}