{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState } from 'react';\nimport { theme } from \"../config/colors\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../../firebase-config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Registered with:', user.email);\n      navigation.navigate(\"Login\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Logo, {}), _jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSignUp,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign Up\"\n        })\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Text, {\n          children: \"Already have an account? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Login', {\n              name: 'Login'\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.link,\n            children: \"Login\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    color: theme.colors.lightText,\n    fontWeight: '700',\n    fontSize: 16\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    justifyContent: \"center\"\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Register.js"],"names":["useNavigation","React","useState","theme","auth","Register","email","setEmail","password","setPassword","navigation","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","user","console","info","navigate","catch","error","message","styles","container","text","input","button","buttonText","row","name","link","StyleSheet","create","flex","paddingTop","height","margin","borderWidth","padding","alignItems","backgroundColor","colors","primary","color","lightText","fontWeight","fontSize","flexDirection","marginTop","justifyContent"],"mappings":";AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT;;;;;;;AAEA,SAASC,IAAT;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGV,aAAa,EAAhC;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBP,IAAAA,IAAI,CACDQ,8BADH,CACkCN,KADlC,EACyCE,QADzC,EAEGK,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiCF,IAAI,CAACT,KAAtC;AACAI,MAAAA,UAAU,CAACQ,QAAX,CAAoB,OAApB;AACD,KANH,EAOGC,KAPH,CAOS,UAAAC,KAAK;AAAA,aAAIJ,OAAO,CAACI,KAAR,CAAcA,KAAK,CAACC,OAApB,CAAJ;AAAA,KAPd;AAQD,GATD;;AAUA,SAEE,KAAC,YAAD;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACI,KAAC,IAAD,KADJ,EAEI,KAAC,SAAD;AACM,QAAA,WAAW,EAAC,OADlB;AAEM,QAAA,KAAK,EAAEjB,KAFb;AAGM,QAAA,YAAY,EAAE,sBAAAkB,IAAI;AAAA,iBAAIjB,QAAQ,CAACiB,IAAD,CAAZ;AAAA,SAHxB;AAIM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAJpB,QAFJ,EAQI,KAAC,SAAD;AACM,QAAA,WAAW,EAAC,UADlB;AAEM,QAAA,KAAK,EAAEjB,QAFb;AAGM,QAAA,YAAY,EAAE,sBAAAgB,IAAI;AAAA,iBAAIf,WAAW,CAACe,IAAD,CAAf;AAAA,SAHxB;AAIM,QAAA,KAAK,EAAEF,MAAM,CAACG,KAJpB;AAKM,QAAA,eAAe;AALrB,QARJ,EAeI,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEH,MAAM,CAACI,MAAhC;AAAwC,QAAA,OAAO,EAAEf,YAAjD;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEW,MAAM,CAACK,UAApB;AAAA;AAAA;AADJ,QAfJ,EAkBI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,GAApB;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMlB,UAAU,CAACQ,QAAX,CAAoB,OAApB,EAA6B;AAAEW,cAAAA,IAAI,EAAE;AAAR,aAA7B,CAAN;AAAA,WAA3B;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACQ,IAApB;AAAA;AAAA;AADF,UAFJ;AAAA,QAlBJ;AAAA;AADJ,IAFF;AA8BD,CA9CD;;AA+CA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ,GALwB;AAW/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,UAAU,EAAE,QADN;AAENC,IAAAA,eAAe,EAAErC,KAAK,CAACsC,MAAN,CAAaC,OAFxB;AAGNJ,IAAAA,OAAO,EAAE,EAHH;AAINF,IAAAA,MAAM,EAAE;AAJF,GAXuB;AAiB/BT,EAAAA,UAAU,EAAE;AACVgB,IAAAA,KAAK,EAAExC,KAAK,CAACsC,MAAN,CAAaG,SADV;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,QAAQ,EAAE;AAHA,GAjBmB;AAsB/BlB,EAAAA,GAAG,EAAE;AACHmB,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE,EAFR;AAGHC,IAAAA,cAAc,EAAE;AAHb,GAtB0B;AA2B/BnB,EAAAA,IAAI,EAAE;AACJe,IAAAA,UAAU,EAAE,MADR;AAEJF,IAAAA,KAAK,EAAExC,KAAK,CAACsC,MAAN,CAAaC;AAFhB;AA3ByB,CAAlB,CAAf;AAiCA,eAAerC,QAAf","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useState } from 'react'\r\nimport { theme } from '../config/colors'\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth } from '../../firebase-config'\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const handleSignUp = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.info('Registered with:', user.email);\r\n        navigation.navigate(\"Login\");\r\n      })\r\n      .catch(error => console.error(error.message))\r\n  }\r\n  return (\r\n    // Using react-natives built in components.\r\n    <SafeAreaView>\r\n        <View style={styles.container}>\r\n            <Logo/>\r\n            <TextInput\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChangeText={text => setEmail(text)}\r\n                  style={styles.input}\r\n            />\r\n            <TextInput\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChangeText={text => setPassword(text)}\r\n                  style={styles.input}\r\n                  secureTextEntry\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.row}>\r\n                <Text>Already have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.navigate('Login', { name: 'Login' })}>\r\n                  <Text style={styles.link}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: \"20%\"\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.primary,\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n  buttonText: {\r\n    color: theme.colors.lightText,\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    justifyContent: \"center\"\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}