{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState } from 'react';\nimport { theme } from \"../config/colors\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../../firebase-config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Logged in with:', user.email);\n      navigation.navigate(\"Main\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logIn,\n      children: \"Log in\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: styles.input,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPassword', {\n            name: 'ResetPassword'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogin,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.dont,\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register', {\n            name: 'Register'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: \"20%\",\n    backgroundColor: \"#060614\",\n    alignItems: 'center'\n  },\n  logIn: {\n    color: 'white',\n    fontSize: 44,\n    marginTop: 50,\n    marginBottom: 30\n  },\n  input: {\n    width: '90%',\n    height: 50,\n    marginTop: 30,\n    borderBottomWidth: 1.5,\n    padding: 10,\n    borderBottomColor: theme.colors.colorGrey,\n    color: 'white'\n  },\n  forgotPassword: {\n    width: '90%',\n    marginBottom: 24,\n    alignItems: 'flex-end'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 20,\n    justifyContent: 'center'\n  },\n  forgot: {\n    fontSize: 15,\n    color: theme.colors.colorPink,\n    marginTop: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.colorPink\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: theme.colors.colorPink,\n    padding: 10,\n    width: '80%',\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: theme.colors.lightText\n  },\n  dont: {\n    color: 'white'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Login.js"],"names":["useNavigation","React","useState","theme","auth","Login","email","setEmail","password","setPassword","navigation","handleLogin","signInWithEmailAndPassword","then","userCredentials","user","console","info","navigate","catch","error","message","styles","container","logIn","text","input","forgotPassword","name","forgot","button","buttonText","row","dont","link","StyleSheet","create","flex","paddingTop","backgroundColor","alignItems","color","fontSize","marginTop","marginBottom","width","height","borderBottomWidth","padding","borderBottomColor","colors","colorGrey","flexDirection","justifyContent","colorPink","fontWeight","borderRadius","lightText"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useState } from 'react'\r\nimport { theme } from '../config/colors'\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth } from '../../firebase-config'\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.info('Logged in with:', user.email);\r\n        navigation.navigate(\"Main\");\r\n      })\r\n      .catch(error => console.error(error.message))\r\n  }\r\n\r\n  return (\r\n    // Using react-natives built in components.\r\n    <SafeAreaView style={styles.container}>\r\n        <Text style={styles.logIn}>Log in</Text>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={text => setPassword(text)}\r\n          style={styles.input}\r\n          secureTextEntry\r\n        />\r\n        <View style={styles.forgotPassword}>\r\n          <TouchableOpacity onPress={() => navigation.navigate('ResetPassword', { name: 'ResetPassword' }) }>\r\n            <Text style={styles.forgot}>Forgot your password?</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={handleLogin}\r\n          style={styles.button}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.row}>\r\n          <Text style={styles.dont}>Don’t have an account? </Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Register', { name: 'Register' })}>\r\n            <Text style={styles.link}>Sign up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        paddingTop:\"20%\",\r\n        backgroundColor:\"#060614\",\r\n        alignItems:'center'\r\n    },\r\n    logIn:{\r\n        color:'white',\r\n        fontSize:44,\r\n        marginTop:50,\r\n        marginBottom:30\r\n    },\r\n    input:{\r\n        width:'90%',\r\n        height:50,\r\n        marginTop:30,\r\n        borderBottomWidth:1.5,\r\n        padding:10,\r\n        borderBottomColor:theme.colors.colorGrey,\r\n        color:'white'\r\n        \r\n    },\r\n    forgotPassword:{\r\n        width:'90%',\r\n        marginBottom:24,\r\n        alignItems:'flex-end'\r\n    },\r\n    row:{\r\n        flexDirection:'row',\r\n        marginTop:20,\r\n        justifyContent:'center'\r\n    },\r\n    forgot:{\r\n        fontSize:15,\r\n        color:theme.colors.colorPink,\r\n        marginTop:20\r\n    },\r\n    link:{\r\n        fontWeight:'bold',\r\n        color:theme.colors.colorPink\r\n    },\r\n    button:{\r\n        alignItems:'center',\r\n        backgroundColor:theme.colors.colorPink,\r\n        padding:10,\r\n        width:'80%',\r\n        borderRadius:15\r\n    },\r\n    buttonText:{\r\n        fontSize:18,\r\n        fontWeight:'700',\r\n        color:theme.colors.lightText,\r\n    },\r\n    dont:{\r\n        color:'white'\r\n    }\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}