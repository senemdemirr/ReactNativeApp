{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport api from \"../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar User = function User() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      datas = _useState2[0],\n      setDatas = _useState2[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.get('/posts').then(function (response) {\n              setDatas(response.data);\n              console.log(response.data);\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      data: datas,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          style: styles.item,\n          children: item.title\n        });\n      }\n    })\n  });\n};\n\nexport default Posts;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingBottom: 20,\n    backgroundColor: '#fff'\n  },\n  item: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginTop: 24,\n    padding: 10,\n    backgroundColor: '#bec1c0',\n    fontSize: 15,\n    textTransform: 'capitalize'\n  }\n});","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Posts.js"],"names":["React","useState","useEffect","api","User","datas","setDatas","getData","get","then","response","data","console","log","catch","error","styles","container","item","id","title","Posts","StyleSheet","create","flex","paddingHorizontal","paddingBottom","backgroundColor","marginHorizontal","marginTop","padding","fontSize","textTransform"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,GAAP;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,kBAA0BH,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRJ,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuB,UAAAC,QAAQ,EAAI;AACvCJ,cAAAA,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAAR;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,aAHK,EAGHG,KAHG,CAGG,UAAAC,KAAK,EAAI;AAChBH,cAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,aALK,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAb,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA,cAEE,KAAC,QAAD;AACE,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA,OADhB;AAEE,MAAA,IAAI,EAAEd,KAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGa,IAAH,QAAGA,IAAH;AAAA,eACV,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACE,IAApB;AAAA,oBAA2BA,IAAI,CAACE;AAAhC,UADU;AAAA;AAHd;AAFF,IADF;AAaD,CA5BD;;AA8BA,eAAeC,KAAf;AAEA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,aAAa,EAAE,EAHN;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BT,EAAAA,IAAI,EAAE;AACJM,IAAAA,IAAI,EAAE,CADF;AAEJI,IAAAA,gBAAgB,EAAE,EAFd;AAGJC,IAAAA,SAAS,EAAE,EAHP;AAIJC,IAAAA,OAAO,EAAE,EAJL;AAKJH,IAAAA,eAAe,EAAE,SALb;AAMJI,IAAAA,QAAQ,EAAE,EANN;AAOJC,IAAAA,aAAa,EAAE;AAPX;AAPyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, StyleSheet, FlatList } from 'react-native'\r\nimport api from '../services/api'\r\n\r\nconst User = () => {\r\n  const [datas, setDatas] = useState(false)\r\n\r\n  const getData = async () => {\r\n    await api.get('/posts').then(response => {\r\n      setDatas(response.data)\r\n      console.log(response.data)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <FlatList \r\n        keyExtractor={(item) => item.id} \r\n        data={datas} \r\n        renderItem={({ item }) => ( \r\n          <Text style={styles.item}>{item.title}</Text>\r\n        )}\r\n      />\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    marginHorizontal: 10,\r\n    marginTop: 24,\r\n    padding: 10,\r\n    backgroundColor: '#bec1c0',\r\n    fontSize: 15,\r\n    textTransform: 'capitalize'\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}