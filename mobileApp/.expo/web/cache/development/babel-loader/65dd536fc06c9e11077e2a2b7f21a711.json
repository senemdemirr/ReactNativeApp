{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { theme } from \"../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ResetPassword = function ResetPassword() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var handleSend = function handleSend() {\n    console.info('Şifre gönderildi');\n    navigation.navigate(\"Login\");\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Logo, {}), _jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSend,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Send Password\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    margin: 20\n  },\n  buttonText: {\n    color: theme.colors.lightText,\n    fontWeight: '700',\n    fontSize: 16\n  }\n});\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/ResetPassword.js"],"names":["useNavigation","React","useState","theme","ResetPassword","email","setEmail","navigation","handleSend","console","info","navigate","styles","container","text","input","button","buttonText","StyleSheet","create","flex","paddingTop","height","margin","borderWidth","padding","alignItems","backgroundColor","colors","primary","color","lightText","fontWeight","fontSize"],"mappings":";AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAIA,SAASC,KAAT;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAEA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb;AACAH,IAAAA,UAAU,CAACI,QAAX,CAAoB,OAApB;AACD,GAHD;;AAKA,SAEE,KAAC,YAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD,KADF,EAEE,KAAC,SAAD;AACM,QAAA,WAAW,EAAC,OADlB;AAEM,QAAA,KAAK,EAAER,KAFb;AAGM,QAAA,YAAY,EAAE,sBAAAS,IAAI;AAAA,iBAAIR,QAAQ,CAACQ,IAAD,CAAZ;AAAA,SAHxB;AAIM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAJpB,QAFF,EAQE,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEH,MAAM,CAACI,MAAhC;AAAwC,QAAA,OAAO,EAAER,UAAjD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEI,MAAM,CAACK,UAApB;AAAA;AAAA;AADF,QARF;AAAA;AADF,IAFF;AAiBD,CA3BD;;AA6BA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ,GALwB;AAW/BT,EAAAA,MAAM,EAAE;AACNU,IAAAA,UAAU,EAAE,QADN;AAENC,IAAAA,eAAe,EAAExB,KAAK,CAACyB,MAAN,CAAaC,OAFxB;AAGNJ,IAAAA,OAAO,EAAE,EAHH;AAINF,IAAAA,MAAM,EAAE;AAJF,GAXuB;AAiB/BN,EAAAA,UAAU,EAAE;AACVa,IAAAA,KAAK,EAAE3B,KAAK,CAACyB,MAAN,CAAaG,SADV;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,QAAQ,EAAE;AAHA;AAjBmB,CAAlB,CAAf;AAwBA,eAAe7B,aAAf","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useState } from 'react'\r\n// Importing components from react-native library.\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\n\r\nimport { theme } from '../config/colors'\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('')\r\n \r\n  const navigation = useNavigation()\r\n\r\n  const handleSend = () => {\r\n    console.info('Şifre gönderildi');\r\n    navigation.navigate(\"Login\");\r\n  }\r\n\r\n  return (\r\n    // Using react-natives built in components.\r\n    <SafeAreaView>\r\n      <View style={styles.container}>\r\n        <Logo/>\r\n        <TextInput\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChangeText={text => setEmail(text)}\r\n              style={styles.input}\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={handleSend}>\r\n          <Text style={styles.buttonText}>Send Password</Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: \"20%\"\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.primary,\r\n    padding: 10,\r\n    margin: 20\r\n  },\r\n  buttonText: {\r\n    color: theme.colors.lightText,\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n\r\n"]},"metadata":{},"sourceType":"module"}