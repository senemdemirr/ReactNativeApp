{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React from 'react';\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableHighlightComponent } from \"react-native-web/dist/index\";\nimport { theme } from \"../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    auth.signIn(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.info('Logged in with: ', user.email);\n      navigation.navigate(\"main\");\n    }).catch(function (error) {\n      return console.error(error.message);\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logIn,\n      children: \"Log in\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: styles.input,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('resetPassword', {\n            name: 'resetPassword'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogin,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Log in\"\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register', {\n            name: 'Register'\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 15,\n    borderWidth: 1.5,\n    padding: 10,\n    borderTop: 'none',\n    borderColor: theme.colors.colorGrey\n  },\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 20,\n    justifyContent: 'center'\n  },\n  forgot: {\n    fontSize: 15,\n    color: theme.colors.colorPink\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/senem/Desktop/bootcamp/odev3/week3-assignment-senemdemirr/mobileApp/src/screens/Login.js"],"names":["useNavigation","React","useState","TouchableHighlightComponent","theme","Login","email","setEmail","password","setPassword","navigation","handleLogin","auth","signIn","then","userCredentials","user","console","info","navigate","catch","error","message","styles","container","logIn","text","input","forgotPassword","name","forgot","button","buttonText","row","link","StyleSheet","create","flex","paddingTop","height","margin","borderWidth","padding","borderTop","borderColor","colors","colorGrey","width","alignItems","marginBottom","flexDirection","marginTop","justifyContent","fontSize","color","colorPink"],"mappings":"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","sourcesContent":["import {useNavigation } from '@react-navigation/core'\r\nimport React from 'react'\r\nimport  {useState} from 'react'\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View, TouchableHighlightComponent } from \"react-native\";\r\nimport { theme } from '../config/colors'\r\n// import { auth } from '../../firebase-config'\r\n\r\nconst Login = ()=>{\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const handleLogin = () =>{\r\n        auth.signIn(email,password).then(userCredentials =>{\r\n            const user = userCredentials.user;\r\n            console.info('Logged in with: ',user.email);\r\n            navigation.navigate(\"main\");\r\n        })\r\n        .catch(error => console.error(error.message))\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style={styles.container}>\r\n            <Text style={styles.logIn}>Log in</Text>\r\n            <TextInput\r\n            placeholder='Email'\r\n            value={email}\r\n            onChangeText={text => setEmail(text)}\r\n            style={styles.input}\r\n            />\r\n            <TextInput\r\n            placeholder='Password'\r\n            value={password}\r\n            onChangeText={text => setPassword(text)}\r\n            style={styles.input}\r\n            secureTextEntry\r\n            />\r\n            <View style={styles.forgotPassword}>\r\n                <TouchableOpacity onPress={()=> navigation.navigate('resetPassword',{name:'resetPassword'})}>\r\n                <Text style={styles.forgot}>Forgot your password?</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n                <Text style={styles.buttonText}>Log in</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.row}>\r\n                <Text>Donâ€™t have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.navigate('Register', { name: 'Register' })}>\r\n                    <Text style={styles.link}>Sign up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        paddingTop:\"20%\",\r\n        // backgroundColor:\"#050517\"\r\n    },\r\n    input:{\r\n        height:40,\r\n        margin:15,\r\n        borderWidth:1.5,\r\n        padding:10,\r\n        borderTop:'none',\r\n        borderColor:theme.colors.colorGrey,\r\n    },\r\n    forgotPassword:{\r\n        width:'100%',\r\n        alignItems:'flex-end',\r\n        marginBottom:24,\r\n    },\r\n    row:{\r\n        flexDirection:'row',\r\n        marginTop:20,\r\n        justifyContent:'center'\r\n    },\r\n    forgot:{\r\n        fontSize:15,\r\n        color:theme.colors.colorPink\r\n    }\r\n})\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}